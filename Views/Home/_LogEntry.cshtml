@using System.ComponentModel.DataAnnotations
@using System.Web.UI.WebControls
@model LogBook.ViewModels.LogBook.LogView


<div class="table">
<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <b>@Html.LabelFor(model => model.LocationId, htmlAttributes: new { }) :</b>
            <label id="locationIdLabel" class="">@Model.LocationId</label>

        </div>
        <div class="form-group">
            <b>@Html.LabelFor(model => model.LocationTypeDescription, htmlAttributes: new { }) :</b>
            <label id="locationTypeLabel">@Model.LocationTypeDescription</label>

        </div>
        <div class="form-group">
            <b>@Html.LabelFor(model => model.LocationTypeDescription, htmlAttributes: new { }) : </b>
            @Html.DisplayFor(model => model.LocationDescription, new { htmlAttributes = new { @class = "form-control" } })

        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <b>@Html.LabelFor(model => model.Timestamp, htmlAttributes: new { })</b>
            @Html.EditorFor(model => model.Timestamp, new { htmlAttributes = new { type = "text", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Timestamp, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <b>@Html.LabelFor(model => model.Onsite, htmlAttributes: new { })</b><br />
            <label>On Site</label>
            @Html.RadioButtonFor(model => model.Onsite, "Onsite", new { Checked = "checked" })
            @Html.LabelFor(model => model.Remote, htmlAttributes: new { })
            @Html.RadioButtonFor(model => model.Onsite, "Remote", htmlAttributes: new { name = "Onsite" })
        </div>
        
        <div class="form-group">
            <b>@Html.LabelFor(model => model.ReasonForResponses, htmlAttributes: new { })</b><br />
            
                    @foreach (var response in Model.ReasonForResponses.OrderBy(r => r.DisplayOrder))
                    {
                            @Html.CheckBox(response.Description, false, htmlAttributes: new { })
                            <label class="">@response.Description (@response.Abbreviation)</label>
                            <br />
                    }

        </div>
        <div class="form-group">
            <b>@Html.LabelFor(model => model.Comment, htmlAttributes: new { })</b>
            @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control", rows = "3" } })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Save" onclick="SaveLog()" class="btn btn-primary" />
            <div id="SaveMessage"></div>
        </div>
    </div>
</div>
</div>
